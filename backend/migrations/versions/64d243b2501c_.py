"""empty message

Revision ID: 64d243b2501c
Revises: 
Create Date: 2025-04-01 10:21:23.339023

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '64d243b2501c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currency',
    sa.Column('code', sa.CHAR(length=3), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('base_rate', sa.Numeric(), nullable=False),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('link',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('tax_number', sa.String(), nullable=True),
    sa.Column('vat_id', sa.String(), nullable=True),
    sa.Column('iban', sa.String(), nullable=True),
    sa.Column('bic', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tax_rate',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('percentage', sa.Numeric(), nullable=False),
    sa.Column('valid_from', sa.Date(), nullable=False),
    sa.Column('active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='role'), server_default='USER', nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('house_number', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('bank_account',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('iban', sa.String(), nullable=False),
    sa.Column('bic', sa.String(), nullable=False),
    sa.Column('bank_name', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chart_of_accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contacts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('supplier_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cost_center',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('chart_of_accounts_id', sa.UUID(), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['chart_of_accounts_id'], ['chart_of_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('document_type', sa.Enum('INCOME', 'EXPENSE', name='document_type'), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'PAID', 'CANCELLED', 'OVERDUE', name='document_status'), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('document_date', sa.Date(), nullable=False),
    sa.Column('supplier_id', sa.UUID(), nullable=True),
    sa.Column('delivery_date', sa.Date(), nullable=True),
    sa.Column('link_id', sa.UUID(), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('cost_center_id', sa.UUID(), nullable=True),
    sa.Column('currency_code', sa.CHAR(length=3), nullable=False),
    sa.ForeignKeyConstraint(['cost_center_id'], ['cost_center.id'], ),
    sa.ForeignKeyConstraint(['currency_code'], ['currency.code'], ),
    sa.ForeignKeyConstraint(['link_id'], ['link.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_tags',
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('document_id', 'tag_id')
    )
    op.create_table('line_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('quantity', sa.Numeric(), nullable=False),
    sa.Column('unit_price', sa.Numeric(), nullable=False),
    sa.Column('total_price', sa.Numeric(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('tax_rate_id', sa.UUID(), nullable=True),
    sa.Column('account_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['tax_rate_id'], ['tax_rate.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('bank_account_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_account.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payment')
    op.drop_table('line_items')
    op.drop_table('document_tags')
    op.drop_table('document')
    op.drop_table('account')
    op.drop_table('tags')
    op.drop_table('cost_center')
    op.drop_table('contacts')
    op.drop_table('chart_of_accounts')
    op.drop_table('category')
    op.drop_table('bank_account')
    op.drop_table('user')
    op.drop_table('tax_rate')
    op.drop_table('supplier')
    op.drop_table('link')
    op.drop_table('currency')
    # ### end Alembic commands ###
